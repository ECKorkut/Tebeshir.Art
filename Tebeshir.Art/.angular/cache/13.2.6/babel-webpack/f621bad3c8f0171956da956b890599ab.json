{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction SigninComponent_div_5_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Invalid username or password \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SigninComponent_div_5_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" No Internet Connection detected, failed to sign up \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SigninComponent_div_5_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Faild to Signup \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SigninComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, SigninComponent_div_5_p_1_Template, 2, 0, \"p\", 6);\n    i0.ɵɵtemplate(2, SigninComponent_div_5_p_2_Template, 2, 0, \"p\", 6);\n    i0.ɵɵtemplate(3, SigninComponent_div_5_p_3_Template, 2, 0, \"p\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.authForm == null ? null : ctx_r0.authForm.errors[\"credentials\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.authForm.errors.noConnection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.authForm.errors.unknownError);\n  }\n}\n/*import { AuthService } from '../auth.service';*/\n\n\nexport let SigninComponent = /*#__PURE__*/(() => {\n  class SigninComponent {\n    constructor( //private authService: AuthService,\n    router) {\n      this.router = router;\n      this.authForm = new FormGroup({\n        username: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(20), Validators.pattern(/^[a-z0-9]+$/)]),\n        password: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(20)])\n      });\n    }\n\n    ngOnInit() {}\n\n    onSubmit() {\n      if (this.authForm.invalid) {\n        return;\n      } //this.authService.signin(this.authForm.value).subscribe({\n      //  next: () => { this.router.navigateByUrl('/inbox') },\n      //  error: ({ error }) => {\n      //    if (error.username || error.password) {\n      //      this.authForm.setErrors({ credentials: true });\n      //    }\n      //  }\n      //});\n\n    }\n\n  }\n\n  SigninComponent.ɵfac = function SigninComponent_Factory(t) {\n    return new (t || SigninComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  SigninComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SigninComponent,\n    selectors: [[\"app-signin\"]],\n    decls: 9,\n    vars: 4,\n    consts: [[1, \"ui\", \"form\", 3, \"formGroup\", \"ngSubmit\"], [\"label\", \"Username\", \"inputType\", \"text\", 3, \"control\"], [\"label\", \"Password\", \"inputType\", \"password\", 3, \"control\"], [\"class\", \"ui red basic label\", 4, \"ngIf\"], [1, \"ui\", \"submit\", \"button\", \"primary\"], [1, \"ui\", \"red\", \"basic\", \"label\"], [4, \"ngIf\"]],\n    template: function SigninComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Sign In\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function SigninComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(3, \"app-input\", 1)(4, \"app-input\", 2);\n        i0.ɵɵtemplate(5, SigninComponent_div_5_Template, 4, 3, \"div\", 3);\n        i0.ɵɵelementStart(6, \"div\")(7, \"button\", 4);\n        i0.ɵɵtext(8, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.authForm.get(\"username\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.authForm.get(\"password\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.authForm.get(\"password\").touched && ctx.authForm.get(\"username\").touched && ctx.authForm.errors);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i3.NgIf],\n    styles: [\"\"]\n  });\n  return SigninComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}